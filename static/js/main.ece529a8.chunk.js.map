{"version":3,"sources":["homepage.js","navigation.js","App.js","serviceWorker.js","index.js"],"names":["Homepage","react_default","a","createElement","homepage_Title","homepage_SectionOne","homepage_SectionTwo","homepage_SectionThree","Component","Title","id","SectionOne","className","SectionTwo","SectionThree","Navigation","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","Navbar","NavbarBrand","href","aria-hidden","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","lib","smooth","to","App","navigation","homepage","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ece529a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nclass Homepage extends Component {\n    render() {\n        return (\n            <div>\n                <Title />\n                <SectionOne />\n                <SectionTwo />\n                <SectionThree />\n            </div>\n        );\n    }\n}\n\nclass Title extends Component {\n    render() {\n        return (\n            <div>\n                <div id=\"top\">\n                    <header>\n                        <div>\n                            <h1>Code of Ethics</h1>\n                        </div>\n                    </header>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nclass SectionOne extends Component {\n    render() {\n        return (\n            <div>\n                <div id=\"sectionOne\">\n                    <header>\n                        <div className=\"center\">\n                            <h2 id=\"one\" className=\"titleSpace\">Statement</h2>\n                        </div>\n                    </header>\n                    <div>\n                        <p className=\"state\">Main Statement: “I swear to fulfill, to the best of my ability and judgment, this covenant:</p> \n                        <p className=\"state\">I will strive to design so that the target audience can achieve their goal seamlessly, keeping in mind of all users.</p>\n                        <p className=\"state\">I will not design for maximizing monetary profits and greed, but will keep in mind monetary gain is necessary to reinvest in the design, and create a better product for the user.</p>\n                        <p className=\"state\">I will design to give the users as much freedom as possible, without infringing upon the happiness of other users.</p>\n                        <p className=\"state\">I will constantly come up with new iterations of my design to improve as many features as possible, while keeping the interest of the users in mind, to create an excellent design.</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nclass SectionTwo extends Component {\n    render() {\n        return (\n            <div>\n                <div id=\"sectionTwo\">\n                    <header>\n                        <div className=\"center\">\n                            <h2 id=\"one\" className=\"titleSpace\">Principles</h2>\n                        </div>\n                    </header>\n                    <div>\n                        <ul>\n                            <li className=\"state\">Hold themselves accountable for the work they are releasing to the world.</li>\n                            <li className=\"state\">Value the impact of their design over the compensation.</li>\n                            <li className=\"state\">Aim to convenience the lives of their audience over exploiting them for extra money. </li>\n                            <li className=\"state\">Always look to improve on a design, knowing that there is always something that can improve.</li>\n                            <li className=\"state\">Understands who their users are and will try to appeal to their targeted individuals as much as possible to maximize the individuals’ utility.</li>\n                            <li className=\"state\">Users are to be free to making their own decision, and there must not be any coercion to manipulate the user into making any decisions.</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass SectionThree extends Component {\n    render() {\n        return (\n            <div>\n                <div id=\"sectionThree\">\n                    <header>\n                        <div className=\"center\">\n                            <h2 id=\"one\" className=\"titleSpace\">Activity</h2>\n                        </div>\n                    </header>\n                    <div>\n                        <p className=\"state\">Please answer the following questions:</p>\n                        <br></br>\n                        <p className=\"state\">In the process flow of your design, could someone who is not familiar with your design, navigate, and achieve the desired goal?</p> \n                        <p className=\"state\">Is your design intended to help the user, or generate revenue? </p>\n                        <p className=\"state\">Does your design allow your users to make their decisions freely?</p>\n                        <p className=\"state\">Have you conducted any A/B testing or any other sort of research to verify that the design will help the user?</p>\n                        <p className=\"state\">While designing are you constantly improving on your designs features? </p>\n                        <p className=\"state\">Does this design improve the utility of your users or of you as a designer?</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Homepage;","\nimport React, { Component } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem } from 'reactstrap';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport { NavHashLink as NavLink } from 'react-router-hash-link';\n\nclass Navigation extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar className=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n                    <NavbarBrand href=\"/\">\n                    <i className=\"fa fa-users fa-2x\" aria-hidden=\"true\"></i>\n                    </NavbarBrand>\n                    <NavbarToggler onClick={this.toggle} />\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink className = \"move\" smooth to=\"/#top\">\n                                    Top   \n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className = \"move\" smooth to=\"/#sectionOne\">\n                                    Statement\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className = \"move\" smooth to=\"/#sectionTwo\">\n                                    Principles\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className = \"move\" smooth to=\"/#sectionThree\">\n                                    Activity\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n        );\n    }\n}\n\nexport default Navigation;","import React, { Component } from 'react';\nimport Homepage from './homepage.js';\nimport Navigation from './navigation.js';\nimport { Jumbotron } from 'reactstrap';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <Homepage />\n\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));"],"sourceRoot":""}